###############
#  server options
#
#  listen = interface:port to listen. Use * as interface to listen all interfaces
#  threads = count of IO threads
#  web_document_root = path to directory with document root for web pages (in future)
#
[server]
#
# listen=localhost:10000
# threads=4
# web_document_root=../www

###############
#  metrics options
#
#  open_metrics = enable or disable /metrics endpoint. Metrics are stored in
#                  the memory until they are scarped. Don't enable this option
#                  until you periodically scarping off the metrics, otherwise
#                  metrics eventually fills the memory!
#  open_metrics_auth = base64 encoded <username>:<password> for authorization
#                  to access open metrics endpoint

[metrics]
# enable=false
# auth_auth=



###############
#  database options
#
#  database_path = absolute or relative path to database (relative to config)
#  create_if_missing = when database doesn't exists, it is created empty
#  max_file_size_mb = limits size of datafiles in megabytes
#  write_buffer_size_mb = defines amout of changes kept in memory in MB
#                        (backed by log file), before they are merged
#                         to the database
#  max_open_files = specifies maximum opened datafiles at one time
#  rlu_cache_mb = amount of memory in MB reserved for read cache

[database]

# database_path=../data
# create_if_missing=true
# max_file_size_mb=2
# write_buffer_size_mb=4
# max_open_files=1000
# rlu_cache_mb=8

###############
#  ssl options
#
#  cert_chain_file = path to certificatep with chain (optional)
#  priv_key = path to file contains a private key
#  listen = specifies interface and port, where to listen SSL connections


[ssl]
# cert_chain_file=cert.pem
# priv_key_file=key.pem
# listen=localhost:10001

###############
#  nostr server description


[description]
# name=Awesome nostr relay
# description=Just awesome relay
# pubkey=
# contact=

###################
#  options
#
#  ident_header = HTTP header where connection identification is stored.
#                 You probably want set this to 'x-forwarded-for' when
#                 server is behind proxy. Otherwise, leave empty and
#                 source IP will be used
#
#  pow = required POW difficulty
#
#  event_rate_window =
#  event_rate_limit =  defines maximum event creation rate. The window is
#                 in seconds. If you specify window 60, and limit=6, it
#                 allows to create one event every 10 seconds, or 6 burst
#                 events each minute
#
#  auth = required AUTH for every connection
#  foreign_relaying = works only when AUTH is enabled. If this is false, only
#                 events created by authorized users can be stored only. Otherwise
#                 events from any users can be stored. Note this option doesn't
#                 affect ephemeral events as they are unlimited
#  block_strangers = Limits stored events only such events, that are created
#                 by users that have a profile stored on this relay. This
#                 includes events created by these users, or events where users
#                 are mentioned, including delegation
#  read_only = puts realy into read only mode. This disables event creation,
#                 (except empheral events).Note that replicators have exception,
#                 replication events into relay by replicators is still possible
#  replicators = list of public keys (space separated) of users acting as replicator
#
#
[options]
# ident_header=note: inbound replications are currently disabled
# pow=0
# event_rate_window=60
# event_rate_limit=6
# auth=false
# foreign_relaying=false
# block_strangers=false
# read_only=false
# replicators=

###############
#  replication options
#  (note currently disabled, will be enabled in future)
#
#  private_key = replicator's private key. Must be 'nsec' type private key.
#               If empty, replicator fails to authentificate on AUTH request
#               and stops operation.
#
#  out:<relay_url> = true # enable outbound replication
#  out:<relay_url> = filter_file # enable filtered outbound replication
#  in:<relay_url> = true # enable inbound replication
#  in:<relay_url> = filter_file # enable filtered inbound replication
#
#  example:
#  out:wss://nostr.example.com = true
#  in:wss://nostr.lol = profiles_list.json
#
##note: inbound replications are currently disabled
##note: outbound replications are currently under development
#

[replication]
# private_key =



###############
#  relaybot - introduces identity which can be used to control
#             features of this relay. You can send commands to relaybot
#             through private messages
#
#  private_key = 'nsec' type private key. If empty, relaybot feature is disabled
#  admin_pubkey = 'npub' for administrator.
#  this_relay_url = required: valid url for this relay (wss://)
#  groups = off|public|local - enable group creation,
#             off - command /create_group disabled
#             on - command /create_group is enabled
#             local - command /create_group is enable for local users

[relaybot]
# private_key=
# admin_pubkey=
# this_relay_url=
# groups=local

